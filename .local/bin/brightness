#!/bin/sh
# requires:
#   brightnessctl (brightnessctl, screen brightness control)
set -e

app_name=${0##*/}
lock_file=${XDG_RUNTIME_DIR-/tmp}/.$app_name.lock
nid_file=${XDG_RUNTIME_DIR-/tmp}/.$app_name.bin.nid

usage() {
  echo "Usage: $app_name [-h] [+|-]<val>[%]"
  exit "${1-0}"
}

min() { [ "$1" -lt "$2" ] && echo "$1" || echo "$2"; }
max() { [ "$1" -gt "$2" ] && echo "$1" || echo "$2"; }
clamp() { min "$(max "$1" "$2")" "$3"; }

[ -f "$lock_file" ] && exit
touch "$lock_file" && trap 'rm -f "$lock_file"' EXIT TERM INT
[ -d "${nid_file%/*}" ] || exit 1

[ $# -gt 0 ] || usage 1
[ "$1" = "-h" ] && usage

val=${1#[-+]}
val=${val%\%}
case $val in *[![:digit:]]*|"") usage 1 ;; esac

current=$(brightnessctl -mc backlight | cut -d , -f 4)
current=${current%\%}
case $1 in
  -*) new=$(max $((current - val))   0) ;;
  +*) new=$(min $((current + val)) 100) ;;
   *) new=$(clamp "$val" 0 100) ;;
esac
brightnessctl -qc backlight s "$new%"

icon=notification-display-brightness
case $new in
  0)                urgency=low      icon=$icon-off    ;;
  [1-9]|[1-3][0-9]) urgency=low      icon=$icon-low    ;;
  [4-7][0-9])       urgency=normal   icon=$icon-medium ;;
  [8-9][0-9]|100)   urgency=critical icon=$icon-full   ;;
esac

notify-send.sh \
  --urgency $urgency \
  --app-name "$app_name" \
  --icon $icon \
  --expire-time 3000 \
  --replace-file "$nid_file" \
  --hint "int:value:$new" \
  "Brightness: $new%"
