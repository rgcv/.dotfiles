#!/bin/sh
# requires:
#   i3:
#     xinput (xorg-xinput, property setting)
#   sway:
#     swaymsg (sway, touchpad information)
#     jq (jq, parse json)
set -eu

app_name=${0##*/}
file=${XDG_CACHE_HOME-$HOME/.cache}/touchpad-status
nid_file=/tmp/.$app_name.prev.nid

if [ -f "$file" ]; then
  read -r status < "$file"
else
  mkdir -p "${file%/*}"
  if [ -n "${SWAYSOCK-}" ]; then
    evs=$(swaymsg -t get_inputs |
      jq -r 'first(.[], select(.type=="touchpad")).libinput.send_events')
    [ "$evs" = disabled ] && status=0 || status=1
  else
    setting="Device Enabled"
    tpid=$(xinput list | grep -i touchpad | grep -o 'id=[0-9]*')
    tpid=${tpid#id=}
    [ -n "$tpid" ] || exit
    status=$(xinput list-props "$tpid" | awk -F: '$0 ~ /'"$setting"'/ {print $2}')
  fi
fi

new=$((status^1))

if [ -n "${SWAYSOCK-}" ]; then
  [ $new -eq 0 ] && cmd=disabled || cmd=enabled
  swaymsg "input 'type:touchpad' events $cmd"
else
  xinput set-prop "$tpid" "$setting" $new
fi

echo $new > "$file"

if [ $new -eq 0 ]; then
  urgency=low
  icon=notification-touchpad-disabled-symbolic
  summary="Touchpad Disabled"
else
  urgency=normal
  icon=notification-input-touchpad-symbolic
  summary="Touchpad Enabled"
fi

notify-send.sh \
  --app-name "$app_name" \
  --urgency "$urgency" \
  --expire-time 3000 \
  --icon "$icon" \
  --replace-file "$nid_file" \
  "$summary" &
