#!/bin/sh
set -eu

while ! grep -q up /sys/class/net/*/operstate; do sleep 5; done

BLOCK_BUTTON=${BLOCK_BUTTON--1}
BUTTON_CHECK=${BUTTON_CHECK-1}
NOTIFICATION_PKGS_MAX=${NOTIFICATION_PKGS_MAX-20}
PACMAN=${PACMAN-pacman}

app_name=${0##*/}
nid_file=${XDG_RUNTIME_DIR-/tmp}/.$app_name.i3b.nid

true() { return 0; }
false() { return 1; }

ellipsize() {
  len=${2-12}
  if [ ${#1} -gt "$len" ]; then
    printf "%.*s…\n" "$((len - 1))" "$1"
  else
    echo "$1"
  fi
}

prettify() {
  color_old=${COLOR_VERSION_OLD-${color1-#ff5555}}
  color_new=${COLOR_VERSION_NEW-${color2-#55ff55}}
  c=0
  max=$NOTIFICATION_PKGS_MAX
  while [ $c -le "$max" ] && read -r pkg old _ new; do
    old=$(ellipsize "$old" 10)
    new=$(ellipsize "$new" 10)
    if [ "${markup-}" = pango ]; then
      old="<span color='$color_old'>$old</span>"
      new="<span color='$color_new'>$new</span>"
    fi
    printf '%12s %s\t→ %s\n' "$(ellipsize "$pkg")" "$old" "$new"

    c=$((c + 1))
  done <<EOF
$@
EOF
}

notify() {
  notify-send.sh \
    --app-name "$app_name" \
    --icon update-manager \
    --expire-time 10000 \
    --replace-file "$nid_file" \
    "$@"
}

display() {
  icon=${ICON-}
  count=$1
  text=
  if [ "${markup-}" = pango ]; then
    case $count in
       0) color=${ICON_COLOR_UPDATED-${color10-#55ff55}} ;;
      -*) color=${ICON_COLOR_FAILED-${color9-#ff5555}} ;;
       *) color=${ICON_COLOR_OUTDATED-${color11-#ffff55}} ;;
     esac
    icon="<span color='$color'>$icon</span>"
  fi
  [ "$count" -gt 0 ] && text=" $count"
  [ "${markup-}" = pango ] && text="<b>$text</b>"

  echo "$icon$text"
  echo "$icon$text"
}

[ "$BLOCK_BUTTON" -eq "$BUTTON_CHECK" ] && check=true || check=false

$check && notify "Checking for updates"
handle_error() {
  $check && notify --icon dialog-error \
    "Something went wrong" \
    "Couldn't check if updates were available"
  display -1
  exit 0
}
trap handle_error USR1
pkgs=$({
  checkupdates || err=$?
  if [ ${err-0} -eq 1 ]; then
    kill -USR1 $$
    exit
  fi
  case $PACMAN in
    yaourt) $PACMAN -Qua ;;
    yay)    $PACMAN -Qua --devel ;;
  esac
})

count=$(printf "%s" "$pkgs" | wc -l)
[ -z "$pkgs" ] || count=$((count + 1))
if [ "$count" -eq 0 ]; then
  $check && notify --icon checkmark --expire-time 3000 "System up-to-date"
elif $check; then
  numupds="$count update"
  [ "$count" -eq 1 ] || numupds=${numupds}s
  if [ "$count" -gt "$NOTIFICATION_PKGS_MAX" ]; then
    hidden=" ($((count - NOTIFICATION_PKGS_MAX)) hidden)"
  fi
  notify --icon package "$numupds available${hidden-}" "$(prettify "$pkgs")"
fi

display "$count"
