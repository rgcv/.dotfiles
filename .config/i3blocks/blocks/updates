#!/bin/sh
set -eu

while ! grep -q up /sys/class/net/*/operstate; do sleep 5; done

BLOCK_BUTTON=${BLOCK_BUTTON--1}
BUTTON_CHECK=${BUTTON_CHECK-1}
NOTIFICATION_PKGS_MAX=${NOTIFICATION_PKGS_MAX-20}
PACMAN=${PACMAN-pacman}

app_name=${0##*/}
nid_file=/tmp/.$app_name.i3b.nid

ellipsize() {
  len=${2-12}
  if [ ${#1} -gt "$len" ]; then
    printf "%.*s…\n" "$((len-1))" "$1"
  else
    echo "$1"
  fi
}
prettify() {
  color_old=${COLOR_VERSION_OLD-${color1-#ff5555}}
  color_new=${COLOR_VERSION_NEW-${color2-#55ff55}}
  c=0
  max=$NOTIFICATION_PKGS_MAX
  while [ $c -le "$max" ] && read -r pkg old _ new; do
    old=$(ellipsize "$old" 10)
    new=$(ellipsize "$new" 10)
    if [ "${markup-}" = pango ]; then
      old="<span color='$color_old'>$old</span>"
      new="<span color='$color_new'>$new</span>"
    fi
    printf '%12s %s\t→ %s\n' "$(ellipsize "$pkg")" "$old" "$new"

    c=$((c + 1))
  done <<EOF
$@
EOF
}

notify() {
  notify-send.sh \
    --app-name "$app_name" \
    --icon software-update-available \
    --expire-time 10000 \
    --replace-file "$nid_file" \
    "$1" "${2-}"
}

[ "$BLOCK_BUTTON" -eq "$BUTTON_CHECK" ] && notify "Checking for updates"
pkgs=$({
  checkupdates
  case $PACMAN in
    yaourt) $PACMAN -Qua ;;
    yay)    $PACMAN -Qua --devel ;;
  esac
})

count=$(echo "$pkgs" | wc -l)
has_updates() { [ "$1" -gt 0 ]; }
if [ "$BLOCK_BUTTON" -eq "$BUTTON_CHECK" ]; then
  has_updates "$count" || { notify "No updates available" && exit; }
fi
numupds="$count update"
[ "$count" -gt 1 ] && numupds=${numupds}s
if [ "$BLOCK_BUTTON" -eq "$BUTTON_CHECK" ]; then
  if [ "$count" -gt "$NOTIFICATION_PKGS_MAX" ]; then
    summary=" ($((count - NOTIFICATION_PKGS_MAX)) hidden)"
  fi
  summary="$numupds available${summary-}"
  notify "$summary" "$(prettify "$pkgs")"
fi

icon=
if [ "${markup-}" = pango ]; then
  color=${ICON_COLOR-${color3-#ffff55}}
  icon="<span color='$color'>$icon</span>"
  count="<b>$count</b>"
fi

echo "$icon $count"
echo "$icon $count"
