#!/bin/sh
# requires:
#   jq (jq, json parsing)
set -e

[ "${markup-}" = pango ] && pango=true || pango=false
player=${BLOCK_INSTANCE-spotify}

true()  { return 0; }
false() { ! true;   }

ellipsize() {
  _l=${2-10}
  if [ ${#1} -gt "$_l" ]; then
    awk 'BEGIN {print substr('"$1"', 1, '"$_l"'-1)"…"}'
  else
    echo "$1"
  fi
}

escape() {
  if $pango; then
    echo "$@" | sed \
      -e 's/&/\&amp;/g'  \
      -e 's/>/\&gt;/g'   \
      -e 's/</\&lt;/g'   \
      -e 's/"/\&quot;/g'
  else
    echo "$@"
  fi
}

json() {
  printf '{"full_text":"%s","short_text":"%s","color":"%s"}\n' \
    "${1-}" "${2-}" "${3-${foreground-#ffffff}}"
}

display() {
  status=$1; shift
  case $status in
    playing) status=${ICON_STATUS_PLAYING-} ;; #  
    paused)  status=${ICON_STATUS_PAUSED-} ;; #  
    *)       json; return; # prefix=${ICON_STATUS_UNKNOWN-}; status=unknown ;;
  esac

  case $player in
    spotify)
      icon=
      $pango && icon="<span color='#81b71a'>$icon</span?"
      ;;
    *) icon=${ICON_PLAYER-} ;;
  esac

  prefix="$status$icon"

  if [ "$status" = unknown ]; then
    full_text=$prefix
    short_text=$prefix
  else
    full_text="$prefix $(ellipsize "$1" "${ARTIST_MAX_FULL-17}") - $(ellipsize "$2" "${SONG_MAX_FULL-17}")"
    short_text="$prefix $(ellipsize "$2" "${SONG_MAX_SHORT-11}")"
  fi

  json "$full_text" "$short_text" "${color15-#ffffff}"
}

# following code adapted from
# https://gitlab.com/gamma-neodots/neodots.i3/blob/base/LIB/i3blocks/playerctl.sh
shutdown() {
  # get process gid
  pgid=$(ps -o pgid= $$)
  # kill it in a new process group
  setsid kill -TERM -"${pgid##* }"
  exit 0
}
trap shutdown INT TERM

while true; do
  playerctl --player="$player" --follow metadata \
    --format "$(printf '{{lc(status)}}\t{{artist}}\t{{title}}')" |
  while IFS=$(printf '\t') read -r how who what; do
    display "$how" "$who" "$what"
  done; sleep 15
done &

while read -r json; do
  case "$(echo "$json" | jq .button?)" in
    1) playerctl --player="$player" play-pause ;;
    2) playerctl --player="$player" previous ;;
    3) playerctl --player="$player" next ;;
  esac
done
